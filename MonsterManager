import java.io.*;
import java.util.ArrayList;

public class MonsterManager {
    private ArrayList<Monster> monsters;

    public MonsterManager() {
        this.monsters = new ArrayList<>();
    }

    public void addMonster(Monster monster) {
        this.monsters.add(monster);
    }

    public void breedMonsters(int index1, int index2) {
        if (index1 < 0 || index1 >= monsters.size() || index2 < 0 || index2 >= monsters.size()) {
            System.out.println("Invalid monster indices.");
            return;
        }

        Monster monster1 = monsters.get(index1);
        Monster monster2 = monsters.get(index2);

        // Simulate breeding by creating a new monster with average stats
        String name = "Baby " + monster1.getName() + " " + monster2.getName();
        String color = monster1.getColor();
        int strength = (monster1.getStrength() + monster2.getStrength()) / 2;
        int speed = (monster1.getSpeed() + monster2.getSpeed()) / 2;

        Monster babyMonster = new Monster(name, color, strength, speed) {
            @Override
            public void performSpecialAbility() {

            }
        };
        addMonster(babyMonster);
    }

    public void saveGame() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("game_state.txt"))) {
            writer.write("Monsters:\n");
            for (Monster monster : monsters) {
                writer.write(monster.toString() + "\n");
            }
        } catch (IOException e) {
            System.out.println("Error saving game state: " + e.getMessage());
        }
    }

    public void loadGame() {
        try (BufferedReader reader = new BufferedReader(new FileReader("game_state.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                if (line.startsWith("Monsters:")) {
                    continue;
                }

                String[] data = line.split(",");
                Monster monster = new Monster(data[0], data[1], Integer.parseInt(data[2]), Integer.parseInt(data[3])) {
                    @Override
                    public void performSpecialAbility() {

                    }
                };
                addMonster(monster);
            }
        } catch (IOException e) {
            System.out.println("Error loading game state: " + e.getMessage());
        }
    }

    public void displayMonsters() {
        for (int i = 0; i < monsters.size(); i++) {
            Monster monster = monsters.get(i);
            System.out.println((i + 1) + ". " + monster.getName() + " - " + monster.getColor() + " - Strength: " + monster.getStrength() + " - Speed: " + monster.getSpeed());
        }
    }
}
